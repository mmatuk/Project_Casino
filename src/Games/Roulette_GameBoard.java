package Games;

import main.MainPanel;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseListener;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Matt
 */
public class Roulette_GameBoard extends javax.swing.JPanel
{
    // Strings for image locations
    private final String mainDirForImages = "/res/images/";
    private final String twoN = mainDirForImages +"btn_2to1_bottom_normal.png";
    private final String twoM = mainDirForImages +"btn_2to1_bottom_mouseover.png";
    private final String twoP = mainDirForImages +"btn_2to1_bottom_pressed.png";

    private final String twoMidN = mainDirForImages +"btn_2to1_normal.png";
    private final String twoMidM = mainDirForImages +"btn_2to1_mouseover.png";
    private final String twoMidP = mainDirForImages +"btn_2to1_pressed.png";

    private final String horN = mainDirForImages +"btn_line_hor_number_normal.png";
    private final String horP = mainDirForImages +"btn_line_hor_number_pressed.png";
    private final String horM = mainDirForImages +"btn_line_hor_number_mouseover.png";

    private final String sqN = mainDirForImages +"btn_line_square_number_normal.png";
    private final String sqM = mainDirForImages +"btn_line_square_number_mouseover.png";
    private final String sqP = mainDirForImages +"btn_line_square_number_pressed.png";

    private final String redN = mainDirForImages +"btn_red_number_normal.png";
    private final String redP = mainDirForImages +"btn_red_number_pressed.png";

    private final String mOver = mainDirForImages +"btn_number_mouseover.png";

    private final String blkN = mainDirForImages +"btn_black_number_normal.png";
    private final String blkP = mainDirForImages +"btn_black_number_pressed.png";

    private final String verN = mainDirForImages +"btn_line_ver_number_normal.png";
    private final String verM = mainDirForImages +"btn_line_ver_number_mouseover.png";
    private final String verP = mainDirForImages +"btn_line_ver_number_pressed.png";

    private final String topN = mainDirForImages +"btn_line_top.png";
    
    private Icon btnCurrentNumberDefaultIcon;
    private RouletteButton btnCurrentNumber;

    /**
     * Creates new form Roulette_GameBoard
     */
    public Roulette_GameBoard()
    {
        initComponents();
        jPanelNumberPickArea.add(makeGameBoard());
        jPanelNumberPickArea.setBackground(
                jPanelNumberPickArea.getComponent(0).getBackground());
        jPanelGameBoard.setBackground(jPanelNumberPickArea.getBackground());
        
        btnCurrentNumberDefaultIcon = null;
        btnCurrentNumber = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanelGameBoard = new javax.swing.JPanel();
        jPanelNumberPickArea = new javax.swing.JPanel();
        lblNumbersPicked = new javax.swing.JLabel();
        lblNumbersPickedDisplay = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblBetAmount = new javax.swing.JLabel();
        betAmount = new javax.swing.JLabel();
        btnSpin = new javax.swing.JButton();

        jPanelGameBoard.setBackground(new java.awt.Color(51, 102, 0));

        jPanelNumberPickArea.setLayout(new javax.swing.OverlayLayout(jPanelNumberPickArea));

        lblNumbersPicked.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblNumbersPicked.setForeground(new java.awt.Color(255, 255, 255));
        lblNumbersPicked.setText("Numbers Picked:");

        lblNumbersPickedDisplay.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblNumbersPickedDisplay.setForeground(new java.awt.Color(255, 255, 255));
        lblNumbersPickedDisplay.setText("Pick Number");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/images/wheel_copyright_001.png"))); // NOI18N

        lblBetAmount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblBetAmount.setForeground(new java.awt.Color(255, 255, 255));
        lblBetAmount.setText("Current Bet:");

        betAmount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        betAmount.setForeground(new java.awt.Color(255, 255, 255));
        betAmount.setText("$0");

        btnSpin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSpin.setText("SPIN");
        btnSpin.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnSpinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelGameBoardLayout = new javax.swing.GroupLayout(jPanelGameBoard);
        jPanelGameBoard.setLayout(jPanelGameBoardLayout);
        jPanelGameBoardLayout.setHorizontalGroup(
            jPanelGameBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGameBoardLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelGameBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelGameBoardLayout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(btnSpin)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelGameBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelGameBoardLayout.createSequentialGroup()
                        .addComponent(jPanelNumberPickArea, javax.swing.GroupLayout.PREFERRED_SIZE, 930, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 2, Short.MAX_VALUE))
                    .addGroup(jPanelGameBoardLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(lblBetAmount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(betAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNumbersPicked)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNumbersPickedDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelGameBoardLayout.setVerticalGroup(
            jPanelGameBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGameBoardLayout.createSequentialGroup()
                .addGroup(jPanelGameBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelGameBoardLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(jPanelGameBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNumbersPicked)
                            .addComponent(lblNumbersPickedDisplay)
                            .addComponent(lblBetAmount)
                            .addComponent(betAmount))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelNumberPickArea, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelGameBoardLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSpin)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelGameBoard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelGameBoard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSpinActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnSpinActionPerformed
    {//GEN-HEADEREND:event_btnSpinActionPerformed
        Roulette game = (Roulette)MainPanel.getGames()[
                MainPanel.getjTabbedPaneGames().getSelectedIndex()];
        game.spin();
    }//GEN-LAST:event_btnSpinActionPerformed

    /**
     * Creates a game board by calling each method that will return the proper panel with buttons.
     * 
     * @return The whole game board created.
     */
    private JPanel makeGameBoard()
    {
            // for all the number and line buttons and the bottom half of the board buttons.
            JPanel numbers = new JPanel();
            numbers.setLayout(new javax.swing.BoxLayout(
                            numbers, javax.swing.BoxLayout.Y_AXIS));

            // The whole game board.
            JPanel totalBoard = new JPanel();
            totalBoard.setLayout(new javax.swing.BoxLayout(
                            totalBoard, javax.swing.BoxLayout.X_AXIS));

            // Add the top white line to the board. Only used to show the line and not used
            // as a button.
            JPanel tmp = new JPanel();
            tmp.setLayout(new javax.swing.BoxLayout(tmp, javax.swing.BoxLayout.X_AXIS));
            RouletteButton topLine = new RouletteButton(topN, topN, topN, 
                            RouletteButton.LINE_BUTTON_NOT_CLICKABLE);
            topLine.setDisabledIcon(new ImageIcon(getClass().getResource(topN)));
            topLine.setEnabled(false);
            tmp.add(topLine);

            // Adds all the middle vertical buttons.
            numbers.add(tmp);
            numbers.add(firstRowNumbers());
            numbers.add(firstrowLines());
            numbers.add(secondRowNumbers());
            numbers.add(secondRowLines());
            numbers.add(thirdRowNumbers());
            numbers.add(thirdRowLines());

            // The rest of the buttons
            JPanel zeros = zeros();
            JPanel linesBetween0andNumbers = linesBetween0andnumbers();
            JPanel twoToOne = twoToOne();
            JPanel twelve = twelve();
            JPanel bottomOfBoard = bottomOfBoard();

            // Makes all buttons align to the top
            zeros.setAlignmentY(Component.TOP_ALIGNMENT);
            linesBetween0andNumbers.setAlignmentY(Component.TOP_ALIGNMENT);
            numbers.setAlignmentY(Component.TOP_ALIGNMENT);
            twoToOne.setAlignmentY(Component.TOP_ALIGNMENT);
            twelve.setAlignmentY(Component.LEFT_ALIGNMENT);
            bottomOfBoard.setAlignmentY(Component.LEFT_ALIGNMENT);

            // adds the bottom half of board to the numbers panel
            numbers.add(twelve);
            numbers.add(bottomOfBoard);

            // adds all panels to the total board.
            totalBoard.add(zeros);
            totalBoard.add(linesBetween0andNumbers);
            totalBoard.add(numbers);
            totalBoard.add(twoToOne);

            // set the background color to green
            totalBoard.setBackground(Color.decode("#137c43"));
            twoToOne.setBackground(Color.decode("#137c43"));

            return totalBoard;

    }

    /**
     * Creates a panel that contains the first row of number buttons and the vertical lines
     * inbetween them.
     * 
     * @return The panel created.
     */
    private JPanel firstRowNumbers()
    {
            JPanel temp = new JPanel();
            temp.setLayout(new javax.swing.BoxLayout(temp, javax.swing.BoxLayout.X_AXIS));

            RouletteButton[] buttons = new RouletteButton[23];

            buttons[0] = new RouletteButton(mOver, redP, redN,3);
            buttons[1] = new RouletteButton(verM, verP, verN, 3,6);
            buttons[2] = new RouletteButton(mOver, blkP, blkN, 6);

            buttons[3] = new RouletteButton(verM, verP, verN, 6,9);
            buttons[4] = new RouletteButton(mOver, redP, redN, 9);
            buttons[5] = new RouletteButton(verM, verP, verN, 9,12);
            buttons[6] = new RouletteButton(mOver, redP, redN, 12);

            buttons[7] = new RouletteButton(verM, verP, verN, 12,15);
            buttons[8] = new RouletteButton(mOver, blkP, blkN, 15);
            buttons[9] = new RouletteButton(verM, verP, verN, 15,18);
            buttons[10] = new RouletteButton(mOver, redP, redN, 18);

            buttons[11] = new RouletteButton(verM, verP, verN, 18,21);
            buttons[12] = new RouletteButton(mOver, redP, redN, 21);
            buttons[13] = new RouletteButton(verM, verP, verN, 21,24);
            buttons[14] = new RouletteButton(mOver, blkP, blkN, 24);

            buttons[15] = new RouletteButton(verM, verP, verN, 24,27);
            buttons[16] = new RouletteButton(mOver, redP, redN, 27);
            buttons[17] = new RouletteButton(verM, verP, verN, 27,30);
            buttons[18] = new RouletteButton(mOver, redP, redN, 30);

            buttons[19] = new RouletteButton(verM, verP, verN, 30,33);
            buttons[20] = new RouletteButton(mOver, blkP, blkN, 33);
            buttons[21] = new RouletteButton(verM, verP, verN, 33,36);
            buttons[22] = new RouletteButton(mOver, redP, redN, 36);

            ButtonListener listener = new ButtonListener();

            for (RouletteButton button : buttons)
            {
                    button.addMouseListener(listener); 
                    temp.add(button);
            }

            return temp;
    }

    /**
     * Creates a panel that contains the second row of number buttons and the vertical lines
     * inbetween them.
     * 
     * @return The panel created.
     */
    private JPanel secondRowNumbers()
    {
            JPanel temp = new JPanel();
            temp.setLayout(new javax.swing.BoxLayout(temp, javax.swing.BoxLayout.X_AXIS));

            RouletteButton[] buttons = new RouletteButton[23];

            buttons[0] = new RouletteButton(mOver, blkP, blkN, 2);
            buttons[1] = new RouletteButton(verM, verP, verN, 2,5);
            buttons[2] = new RouletteButton(mOver, redP, redN, 5);

            buttons[3] = new RouletteButton(verM, verP, verN, 5,8);
            buttons[4] = new RouletteButton(mOver, blkP, blkN, 8);
            buttons[5] = new RouletteButton(verM, verP, verN, 8,11);
            buttons[6] = new RouletteButton(mOver, blkP, blkN, 11);

            buttons[7] = new RouletteButton(verM, verP, verN, 11,14);
            buttons[8] = new RouletteButton(mOver, redP, redN, 14);
            buttons[9] = new RouletteButton(verM, verP, verN, 14,17);
            buttons[10] = new RouletteButton(mOver, blkP, blkN, 17);

            buttons[11] = new RouletteButton(verM, verP, verN, 17,20);
            buttons[12] = new RouletteButton(mOver, blkP, blkN, 20);
            buttons[13] = new RouletteButton(verM, verP, verN, 20,23);
            buttons[14] = new RouletteButton(mOver, redP, redN, 23);

            buttons[15] = new RouletteButton(verM, verP, verN, 23,26);
            buttons[16] = new RouletteButton(mOver, blkP, blkN, 26);
            buttons[17] = new RouletteButton(verM, verP, verN, 26,29);
            buttons[18] = new RouletteButton(mOver, blkP, blkN, 29);

            buttons[19] = new RouletteButton(verM, verP, verN, 29,32);
            buttons[20] = new RouletteButton(mOver, redP, redN, 32);
            buttons[21] = new RouletteButton(verM, verP, verN, 32,35);
            buttons[22] = new RouletteButton(mOver, blkP, blkN, 35);

            ButtonListener listener = new ButtonListener();

            for (RouletteButton button : buttons)
            {
                    button.addMouseListener(listener); 
                    temp.add(button);
            }

            return temp;
    }

    /**
     * Creates a panel that contains the third row of number buttons and the vertical lines
     * inbetween them.
     * 
     * @return Thr panel created.
     */
    private JPanel thirdRowNumbers()
    {
            JPanel temp = new JPanel();

            temp.setLayout(new javax.swing.BoxLayout(temp, javax.swing.BoxLayout.X_AXIS));

            RouletteButton[] buttons = new RouletteButton[23];

            buttons[0] = new RouletteButton(mOver, redP, redN,1);
            buttons[1] = new RouletteButton(verM, verP, verN, 1,4);
            buttons[2] = new RouletteButton(mOver, blkP, blkN, 4);

            buttons[3] = new RouletteButton(verM, verP, verN, 4,7);
            buttons[4] = new RouletteButton(mOver, redP, redN, 7);
            buttons[5] = new RouletteButton(verM, verP, verN, 7,10);
            buttons[6] = new RouletteButton(mOver, blkP, blkN, 10);

            buttons[7] = new RouletteButton(verM, verP, verN, 10,13);
            buttons[8] = new RouletteButton(mOver, blkP, blkN, 13);
            buttons[9] = new RouletteButton(verM, verP, verN, 13,16);
            buttons[10] = new RouletteButton(mOver, redP, redN, 16);

            buttons[11] = new RouletteButton(verM, verP, verN, 16,19);
            buttons[12] = new RouletteButton(mOver, redP, redN, 19);
            buttons[13] = new RouletteButton(verM, verP, verN, 19,22);
            buttons[14] = new RouletteButton(mOver, blkP, blkN, 22);

            buttons[15] = new RouletteButton(verM, verP, verN, 22,25);
            buttons[16] = new RouletteButton(mOver, redP, redN, 25);
            buttons[17] = new RouletteButton(verM, verP, verN, 25,28);
            buttons[18] = new RouletteButton(mOver, blkP, blkN, 28);

            buttons[19] = new RouletteButton(verM, verP, verN, 28,31);
            buttons[20] = new RouletteButton(mOver, blkP, blkN, 31);
            buttons[21] = new RouletteButton(verM, verP, verN, 31,34);
            buttons[22] = new RouletteButton(mOver, redP, redN, 34);

            ButtonListener listener = new ButtonListener();

            for (RouletteButton button : buttons)
            {
                    button.addMouseListener(listener); 
                    temp.add(button);
            }

            return temp;
    }

    /**
     * Creates a panel that contains the first horizontal line buttons that are inbetween the numbers
     * on the game board. 
     * 
     * @return The panel created.
     */
    private JPanel firstrowLines()
    {
            JPanel temp = new JPanel();
            temp.setLayout(new javax.swing.BoxLayout(temp, javax.swing.BoxLayout.X_AXIS));

            RouletteButton[] buttons = new RouletteButton[23];

            int num1 = 2;
            int num2 = 3;
            int num3 = 0;

            for (int num = 0; num < 11; num++)
            {
                    buttons[num3] = new RouletteButton(horM, horP, horN, num1,num2);
                    num3++;
                    buttons[num3] = new RouletteButton(sqM, sqP, sqN, 
                                    num1,num2,num1 = num1 +3, num2 = num2 +3);
                    num3++;

            }
            buttons[num3] = new RouletteButton(horM, horP, horN, 35,36);

            ButtonListener listener = new ButtonListener();

            for (RouletteButton button : buttons)
            {
                    button.addMouseListener(listener); 
                    temp.add(button);
            }
            return temp;
    }

    /**
     * Creates a panel that contains the second horizontal line buttons that are inbetween the numbers
     * on the game board. 
     * 
     * @return The panel created.
     */
    private JPanel secondRowLines()
    {
            JPanel temp = new JPanel();
            temp.setLayout(new javax.swing.BoxLayout(temp, javax.swing.BoxLayout.X_AXIS));

            RouletteButton[] buttons = new RouletteButton[23];

            int num1 = 1;
            int num2 = 2;
            int num3 = 0;

            for (int num = 0; num < 11; num++)
            {
                    buttons[num3] = new RouletteButton(horM, horP, horN, num1,num2);
                    num3++;
                    buttons[num3] = new RouletteButton(sqM, sqP, sqN, 
                                    num1,num2,num1 = num1 +3, num2 = num2 +3);
                    num3++;

            }

            buttons[num3] = new RouletteButton(horM, horP, horN, 35,36);

            ButtonListener listener = new ButtonListener();

            for (RouletteButton button : buttons)
            {
                    button.addMouseListener(listener); 
                    temp.add(button);
            }
            return temp;
    }

    /**
     * Creates a panel that contains the third horizontal line buttons that are inbetween the numbers
     * and the bottom of the game board. 
     * 
     * @return The panel created.
     */
    private JPanel thirdRowLines()
    {
            JPanel temp = new JPanel();
            temp.setLayout(new javax.swing.BoxLayout(temp, javax.swing.BoxLayout.X_AXIS));

            RouletteButton[] buttons = new RouletteButton[23];

            int num1 = 1;
            int num2 = 2;
            int num3 = 3;
            int num4 = 0;

            for (int num = 0; num < 11; num++)
            {
                    buttons[num4] = new RouletteButton(horM, horP, horN, num1,num2,num3);
                    num4++;
                    buttons[num4] = new RouletteButton(sqM, sqP, sqN, 
                                    num1,num2,num3,num1 = num1 +3, num2 = num2 +3,num3 = num3 +3);
                    num4++;

            }

            buttons[num4] = new RouletteButton(horM, horP, horN, 34,35,36);

            ButtonListener listener = new ButtonListener();

            for (RouletteButton button : buttons)
            {
                    button.addMouseListener(listener); 
                    temp.add(button);
            }
            return temp;
    }

    /**
     * Creates a panel that contains all the buttons between the 0 buttons and the numbers
     * on the game board.
     * 
     * @return The panel created.
     */
    private JPanel linesBetween0andnumbers()
    {
            String smallN =mainDirForImages +"btn_line_ver_small_normal.png";
            String smallM = mainDirForImages +"btn_line_ver_small_mouseover.png";
            String smallP = mainDirForImages +"btn_line_ver_small_pressed.png";

            String larN = mainDirForImages +"btn_line_square_larger_number_normal.png";
            String larM = mainDirForImages +"btn_line_square_larger_number_mouseover.png";
            String larP = mainDirForImages +"btn_line_square_larger_number_pressed.png";

            String larLineN = mainDirForImages +"btn_line_ver_larger_normal.png";
            String larLineM = mainDirForImages +"btn_line_ver_larger_mouseover.png";
            String larLineP = mainDirForImages +"btn_line_ver_larger_pressed.png";

            String lineleft = mainDirForImages +"btn_line_left.png";

            JPanel temp = new JPanel();
            temp.setLayout(new javax.swing.BoxLayout(temp, javax.swing.BoxLayout.Y_AXIS));

            RouletteButton[] buttons = new RouletteButton[9];

            buttons[0] = new RouletteButton(larLineM, larLineP, larLineN, 3,37);
            buttons[1] = new RouletteButton(sqM, sqP, sqN, 2,3,37);
            buttons[2] = new RouletteButton(smallM, smallP, smallN, 2,37);
            buttons[3] = new RouletteButton(larM, larP, larN, 0,2,37);
            buttons[4] = new RouletteButton(smallM, smallP, smallN, 0,2);
            buttons[5] = new RouletteButton(sqM, sqP, sqN, 0,1,2);
            buttons[6] = new RouletteButton(verM, verP, verN, 0,1);
            buttons[7] = new RouletteButton(sqM, sqP, sqN, 0,1,2,3,37);


            // This is for the white line next to the bottom half of the board on the right. Only used 
            // because of the need for the picture and not the button
            buttons[8] = new RouletteButton(lineleft, lineleft, lineleft, 
                            RouletteButton.LINE_BUTTON_NOT_CLICKABLE);
            buttons[8].setDisabledIcon(new ImageIcon(getClass().getResource(lineleft)));
            buttons[8].setEnabled(false);

            ButtonListener listener = new ButtonListener();

            for (RouletteButton button : buttons)
            {
                    button.addMouseListener(listener); 
                    temp.add(button);
            }
            return temp;
    }

    /**
     * Creates a panel the contains the two zero buttons and the line inbetween them.
     * 
     * @return The panel created.
     */
    private JPanel zeros()
    {
            String ooN = mainDirForImages +"btn_00_normal.png";
            String ooM = mainDirForImages +"btn_00_mouseover.png";
            String ooP = mainDirForImages +"btn_00_pressed.png";

            String oN = mainDirForImages +"btn_0_normal.png";
            String oM = mainDirForImages +"btn_0_mouseover.png";
            String oP = mainDirForImages +"btn_0_pressed.png";

            String horON = mainDirForImages +"btn_line_between0_normal.png";
            String horOM = mainDirForImages +"btn_line_between0_mouseover.png";
            String horOP = mainDirForImages +"btn_line_between0_pressed.png";

            JPanel temp = new JPanel();
            temp.setLayout(new javax.swing.BoxLayout(temp, javax.swing.BoxLayout.Y_AXIS));

            RouletteButton[] buttons = new RouletteButton[3];

            buttons[0] = new RouletteButton(ooM, ooP, ooN, 37);
            buttons[1] = new RouletteButton(horOM, horOP, horON, 0,37);
            buttons[2] = new RouletteButton(oM, oP, oN, 0);

            ButtonListener listener = new ButtonListener();

            for (RouletteButton button : buttons)
            {
                    button.addMouseListener(listener); 
                    temp.add(button);
            }
            return temp;
    }

    /**
     * Creates a panel that contains the three buttons for 2 to 1 odds. 
     * 
     * @return The Panel created.
     */
    private JPanel twoToOne()
    {

            String horBetweenN = mainDirForImages +"btn_line_between2_normal.png";
            String horBetweenM = mainDirForImages +"btn_line_between2_mouseover.png";
            String horBetweenP = mainDirForImages +"btn_line_between2_pressed.png";

            String twoTopN = mainDirForImages +"btn_2to1_top_normal.png";
            String twoTopM = mainDirForImages +"btn_2to1_top_mouseover.png";
            String twoTopP = mainDirForImages +"btn_2to1_top_pressed.png";

            String lineRight = mainDirForImages +"btn_line_right.png";

            JPanel temp = new JPanel();
            temp.setLayout(new javax.swing.BoxLayout(temp, javax.swing.BoxLayout.Y_AXIS));

            RouletteButton[] buttons = new RouletteButton[6];

            buttons[0] = new RouletteButton(twoTopM, twoTopP, twoTopN, 
                            Roulette.TWO_ONE_TOP);
            buttons[0].addStringTextRotated(Roulette.TWO_TEXT, 20);
            buttons[1] = new RouletteButton(horBetweenM, horBetweenP, horBetweenN, 
                            Roulette.TWO_ONE_TOP_MID);
            buttons[2] = new RouletteButton(twoMidM, twoMidP, twoMidN, 
                            Roulette.TWO_ONE_MID);
            buttons[2].addStringTextRotated(Roulette.TWO_TEXT, 20);
            buttons[3] = new RouletteButton(horBetweenM, horBetweenP, horBetweenN, 
                            Roulette.TWO_ONE_MID_BOTTOM);
            buttons[4] = new RouletteButton(twoM, twoP, twoN, 
                            Roulette.TWO_ONE_BOTTOM);
            buttons[4].addStringTextRotated(Roulette.TWO_TEXT, 20);

            // This is for the white line next to the bottom half of the board on the right. Only used 
            // because of the need for the picture and not the button
            buttons[5] = new RouletteButton(lineRight, lineRight, lineRight, 
                            RouletteButton.LINE_BUTTON_NOT_CLICKABLE);
            buttons[5].setDisabledIcon(new ImageIcon(getClass().getResource(lineRight)));
            buttons[5].setEnabled(false);

            ButtonListener listener = new ButtonListener();

            for (RouletteButton button : buttons)
            {
                    button.addMouseListener(listener); 
                    temp.add(button);
            }

            return temp;
    }

    /**
     * Creates a panel that contains the buttons 1st 12, 2nd 12, and 3rd 12 for the game.
     * 
     * @return The panel created.
     */
    private JPanel twelve()
    {
            String endN = mainDirForImages +"btn_3rds_ends_normal.png";
            String endM = mainDirForImages +"btn_3rds_ends_mouseover.png";
            String endP = mainDirForImages +"btn_3rds_ends_pressed.png";

            String midN = mainDirForImages +"btn_3rds_mid_normal.png";
            String midM = mainDirForImages +"btn_3rds_mid_mouseover.png";
            String midP = mainDirForImages +"btn_3rds_mid_pressed.png";

            JPanel temp = new JPanel();
            temp.setLayout(new javax.swing.BoxLayout(temp, javax.swing.BoxLayout.X_AXIS));

            RouletteButton[] buttons = new RouletteButton[3];

            buttons[0] = new RouletteButton(midM, midP, midN, Roulette.FIRST_TWELVE);
            buttons[0].addText(Roulette.FIRST_TWELVE_TEXT, 30);
            buttons[1] = new RouletteButton(endM, endP, endN, Roulette.SECOND_TWELVE);
            buttons[1].addText(Roulette.SECOND_TWELVE_TEXT, 30);
            buttons[2] = new RouletteButton(midM, midP, midN, Roulette.THIRD_TWELVE);
            buttons[2].addText(Roulette.THIRD_TWELVE_TEXT, 30);

            ButtonListener listener = new ButtonListener();

            for (RouletteButton button : buttons)
            {
                    button.addMouseListener(listener); 
                    temp.add(button);
            }

            return temp;
    }

    /**
     * Creates the Panel for the bottom of the board. The panel will contain 1 to 18, 
     * EVEN, RED, BLACK, ODD, 19 to 36 buttons.
     * 
     * @return The panel created
     */
    private JPanel bottomOfBoard()
    {
            String firstHalfN = mainDirForImages +"btn_1-18_and_odd_normal.png";
            String firstHalfM = mainDirForImages +"btn_1-18_and_odd_mouseover.png";
            String firstHalfP = mainDirForImages +"btn_1-18_and_odd_pressed.png";

            String lastHalfN = mainDirForImages +"btn_even_red_19-36_normal.png";
            String lastHalfM = mainDirForImages +"btn_even_red_19-36_mouseover.png";
            String lastHalfP = mainDirForImages +"btn_even_red_19-36_pressed.png";

            String midN = mainDirForImages +"btn_black_normal.png";
            String midM = mainDirForImages +"btn_black_mouseover.png";
            String midP = mainDirForImages +"btn_black_pressed.png";

            JPanel temp = new JPanel();
            temp.setLayout(new javax.swing.BoxLayout(temp, javax.swing.BoxLayout.X_AXIS));

            RouletteButton[] buttons = new RouletteButton[6];

            buttons[0] = new RouletteButton(lastHalfM, lastHalfP, lastHalfN, Roulette.FIRST_HALF);
            buttons[0].addText(Roulette.FIRST_HALF_TEXT, 25);
            buttons[1] = new RouletteButton(lastHalfM, lastHalfP, lastHalfN, Roulette.EVEN_NUM);
            buttons[1].addText(Roulette.EVEN_TEXT, 25);
            buttons[2] = new RouletteButton(lastHalfM, lastHalfP, lastHalfN, Roulette.RED_NUM);
            buttons[2].addText(Roulette.RED_TEXT, 25);
            buttons[2].setForeground(Color.RED);
            buttons[3] = new RouletteButton(midM, midP, midN, Roulette.BLACK_NUM);
            buttons[3].addText(Roulette.BLACK_TEXT, 25);
            buttons[3].setForeground(Color.BLACK);
            buttons[4] = new RouletteButton(firstHalfM, firstHalfP, firstHalfN, Roulette.ODD_NUM);
            buttons[4].addText(Roulette.ODD_TEXT, 25);
            buttons[5] = new RouletteButton(midM, midP, midN, Roulette.LAST_HALF);
            buttons[5].addText(Roulette.SECOND_HALF_TEXT, 25);

            ButtonListener listener = new ButtonListener();

            for (RouletteButton button : buttons)
            {
                    button.addMouseListener(listener); 
                    temp.add(button);
            }

            return temp;
    }

    /**
     * Reset the icon of the current number to the default icon. used after
     * wheel is spun.
     */
    public void clearCurrentNumberButton()
    {
        if (btnCurrentNumberDefaultIcon != null)
        {
            btnCurrentNumber.setIcon(btnCurrentNumberDefaultIcon);
            btnCurrentNumber = null;
            btnCurrentNumberDefaultIcon = null;
        }
    }

    
    //**********************************************************
    //*****************Testing this class still*****************
    private class ButtonListener implements MouseListener
    {

            public void mouseClicked(java.awt.event.MouseEvent e) 
            {
                try
                {
                    
                    RouletteButton b = (RouletteButton) e.getSource();
                    
                    // if the button clicked is not the side line buttons that 
                    // are disabled
                    if (b.isEnabled())
                    {
                        if (b.getNumbers() != RouletteButton.LINE_BUTTON_NOT_CLICKABLE 
                                && MainPanel.doesUserHaveMoney())
                        {
                            Roulette.setUserPick(b.getNumbers());
                            lblNumbersPickedDisplay.setText(Roulette.determinePickText());


                            Roulette tmp = (Roulette) MainPanel.getGames()[
                                    MainPanel.getCurrentGameIndex()];

                            // sets the userBet when the user clicks a number. Bet is
                            // set to what ever MainPanel betAmount is.
                            tmp.setUserBet(MainPanel.getBetAmount());
                            MainPanel.updateCurrentBet(); // upadtes the mainPanel bet 

                            // Makes the button clicked change to the mouseover icon.
                            // So the choice is easily visable for the user.
                            if (btnCurrentNumber == null)
                            {
                                btnCurrentNumberDefaultIcon = b.getIcon();
                                btnCurrentNumber = b;
                                btnCurrentNumber.setIcon(b.getRolloverIcon());
                            }
                            else
                            {
                                btnCurrentNumber.setIcon(btnCurrentNumberDefaultIcon);
                                btnCurrentNumberDefaultIcon = b.getIcon();
                                btnCurrentNumber = b;
                                btnCurrentNumber.setIcon(b.getRolloverIcon());
                            }

                        }
                    }
                } 
                catch (Exception error)
                {
                    error.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Error. Button not found.");
                }
            }

            public void mouseEntered(java.awt.event.MouseEvent e) 
            {				
            }

            public void mouseExited(java.awt.event.MouseEvent e) 
            {				
            }

            public void mousePressed(java.awt.event.MouseEvent e) 
            {				
            }

            public void mouseReleased(java.awt.event.MouseEvent e) 
            {				
            }
    }

    public JPanel getjPanelGameBoard()
    {
        return jPanelGameBoard;
    }

    public void setjPanelGameBoard(JPanel jPanelGameBoard)
    {
        this.jPanelGameBoard = jPanelGameBoard;
    }

    public JLabel getLblNumbersPickedDisplay()
    {
        return lblNumbersPickedDisplay;
    }

    public void setLblNumbersPickedDisplay(JLabel lblNumbersPickedDisplay)
    {
        this.lblNumbersPickedDisplay = lblNumbersPickedDisplay;
    }

    public JLabel getBetAmount()
    {
        return betAmount;
    }

    public void setBetAmount(JLabel betAmount)
    {
        this.betAmount = betAmount;
    }

    public JLabel getLblBetAmount()
    {
        return lblBetAmount;
    }

    public void setLblBetAmount(JLabel lblBetAmount)
    {
        this.lblBetAmount = lblBetAmount;
    }
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel betAmount;
    private javax.swing.JButton btnSpin;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanelGameBoard;
    private javax.swing.JPanel jPanelNumberPickArea;
    private javax.swing.JLabel lblBetAmount;
    private javax.swing.JLabel lblNumbersPicked;
    private javax.swing.JLabel lblNumbersPickedDisplay;
    // End of variables declaration//GEN-END:variables
}
